plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version "0.9.4"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '19'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.2.3'
	// https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt
	implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.38-rc3'
	// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core
	implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.5.0.CR1'
	// https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
	implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'
	// https://mvnrepository.com/artifact/io.github.lognet/grpc-spring-boot-starter
	implementation group: 'io.github.lognet', name: 'grpc-spring-boot-starter', version: '5.1.5'
	// https://mvnrepository.com/artifact/io.grpc/grpc-all
	implementation group: 'io.grpc', name: 'grpc-all', version: '1.62.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.0.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.0.0-pre2"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
